{
  "info": {
    "name": "Internship AI Platform API",
    "description": "API collection for AI-powered internship recruitment platform with NLP analysis and personalized skill roadmaps",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "api_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check if server is running and get system status"
          },
          "response": []
        }
      ],
      "description": "System health and status endpoints"
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Register successful\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.success) {",
                  "        pm.environment.set(\"user_id\", jsonData.user.id);",
                  "        pm.environment.set(\"token\", jsonData.token);",
                  "        pm.environment.set(\"is_email_verified\", jsonData.user.isEmailVerified);",
                  "        pm.environment.set(\"auth_method\", jsonData.user.authMethod);",
                  "        ",
                  "        // Log email verification status",
                  "        if (!jsonData.user.isEmailVerified) {",
                  "            console.log(\"⚠️ Email verification required. Check your email for verification link.\");",
                  "        }",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student@example.com\",\n  \"password\": \"123456\",\n  \"firstName\": \"Nguyen Van\",\n  \"lastName\": \"A\",\n  \"role\": \"student\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/register",
              "host": ["{{api_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user (student, employer, or admin)"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.success) {",
                  "        pm.environment.set(\"user_id\", jsonData.user.id);",
                  "        pm.environment.set(\"token\", jsonData.token);",
                  "        pm.environment.set(\"is_email_verified\", jsonData.user.isEmailVerified);",
                  "        pm.environment.set(\"auth_method\", jsonData.user.authMethod);",
                  "        ",
                  "        // Log email verification status",
                  "        if (!jsonData.user.isEmailVerified) {",
                  "            console.log(\"⚠️ Email not verified. Use 'Resend Email Verification' to get a new link.\");",
                  "        }",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student@example.com\",\n  \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/login",
              "host": ["{{api_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login user and get authentication token"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get user profile successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.success) {",
                  "        pm.environment.set(\"is_email_verified\", jsonData.user.isEmailVerified);",
                  "        pm.environment.set(\"auth_method\", jsonData.user.authMethod);",
                  "        ",
                  "        // Log email verification status",
                  "        if (!jsonData.user.isEmailVerified) {",
                  "            console.log(\"⚠️ Email not verified. Use 'Resend Email Verification' to get a new link.\");",
                  "        }",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/auth/me",
              "host": ["{{api_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current user profile information including email verification status"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Nguyen Van\",\n  \"lastName\": \"A\",\n  \"phone\": \"0123456789\",\n  \"dateOfBirth\": \"2000-01-01\",\n  \"gender\": \"male\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Ho Chi Minh\",\n    \"state\": \"HCM\",\n    \"country\": \"Vietnam\"\n  },\n  \"education\": {\n    \"institution\": \"University of Technology\",\n    \"degree\": \"Bachelor\",\n    \"fieldOfStudy\": \"Computer Science\",\n    \"graduationYear\": 2024,\n    \"gpa\": 3.5\n  },\n  \"skills\": [\n    {\n      \"name\": \"JavaScript\",\n      \"level\": \"intermediate\",\n      \"yearsOfExperience\": 2\n    },\n    {\n      \"name\": \"React\",\n      \"level\": \"beginner\",\n      \"yearsOfExperience\": 1\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/updatedetails",
              "host": ["{{api_url}}"],
              "path": ["auth", "updatedetails"]
            },
            "description": "Update user profile information"
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"123456\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/updatepassword",
              "host": ["{{api_url}}"],
              "path": ["auth", "updatepassword"]
            },
            "description": "Change user password"
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student@example.com\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/forgotpassword",
              "host": ["{{api_url}}"],
              "path": ["auth", "forgotpassword"]
            },
            "description": "Request password reset - sends email with reset link"
          },
          "response": []
        },
        {
          "name": "Reset Password with OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"otp\": \"{{otp_code}}\",\n  \"password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/resetpassword",
              "host": ["{{api_url}}"],
              "path": ["auth", "resetpassword"]
            },
            "description": "Reset password using OTP from email. Set 'user_email' and 'otp_code' in environment variables."
          },
          "response": []
        },
        {
          "name": "Verify Email with OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Email verification successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.success) {",
                  "        pm.environment.set(\"user_id\", jsonData.user.id);",
                  "        pm.environment.set(\"is_email_verified\", jsonData.user.isEmailVerified);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"otp\": \"{{otp_code}}\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/verify-email",
              "host": ["{{api_url}}"],
              "path": ["auth", "verify-email"]
            },
            "description": "Verify email using OTP code from registration email. Set 'user_email' and 'otp_code' in environment variables."
          },
          "response": []
        },
        {
          "name": "Resend Email Verification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{api_url}}/auth/resend-verification",
              "host": ["{{api_url}}"],
              "path": ["auth", "resend-verification"]
            },
            "description": "Resend email verification OTP. Requires authentication token."
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{api_url}}/auth/logout",
              "host": ["{{api_url}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout user"
          },
          "response": []
        },
        {
          "name": "Google OAuth Login/Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Google OAuth successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.success) {",
                  "        pm.environment.set(\"user_id\", jsonData.user.id);",
                  "        pm.environment.set(\"token\", jsonData.token);",
                  "        pm.environment.set(\"is_new_user\", jsonData.isNew);",
                  "        pm.environment.set(\"auth_method\", jsonData.user.authMethod);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idToken\": \"{{google_id_token}}\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/google",
              "host": ["{{api_url}}"],
              "path": ["auth", "google"]
            },
            "description": "Login or register using Google OAuth. Set 'google_id_token' in environment variables."
          },
          "response": []
        },
        {
          "name": "Link Google Account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idToken\": \"{{google_id_token}}\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/link-google",
              "host": ["{{api_url}}"],
              "path": ["auth", "link-google"]
            },
            "description": "Link existing account with Google OAuth. Requires authentication token. Set 'google_id_token' in environment variables."
          },
          "response": []
        },
        {
          "name": "Unlink Google Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/auth/unlink-google",
              "host": ["{{api_url}}"],
              "path": ["auth", "unlink-google"]
            },
            "description": "Unlink Google account from existing account. Requires authentication token."
          },
          "response": []
        }
      ],
      "description": "User authentication and profile management including Google OAuth and email verification"
    },
    {
      "name": "AI Services",
      "item": [
        {
          "name": "Analyze CV",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cvText\": \"Nguyen Van A\\nComputer Science Student\\nUniversity of Technology\\n\\nSkills:\\n- JavaScript (2 years)\\n- React (1 year)\\n- Node.js (1 year)\\n- Python (1 year)\\n\\nExperience:\\n- Intern at Tech Company (3 months)\\n- Project: E-commerce website\\n\\nEducation:\\n- Bachelor in Computer Science\\n- GPA: 3.5/4.0\",\n  \"jobId\": \"{{job_id}}\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/ai/analyze-cv",
              "host": ["{{api_url}}"],
              "path": ["ai", "analyze-cv"]
            },
            "description": "Analyze CV and extract skills, experience, and match with job requirements"
          },
          "response": []
        },
        {
          "name": "Get Job Recommendations",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cvText\": \"Nguyen Van A\\nComputer Science Student\\nUniversity of Technology\\n\\nSkills:\\n- JavaScript (2 years)\\n- React (1 year)\\n- Node.js (1 year)\\n- Python (1 year)\",\n  \"limit\": 5,\n  \"filters\": {\n    \"location\": \"Ho Chi Minh\",\n    \"type\": \"internship\",\n    \"categories\": [\"technology\"]\n  }\n}"
            },
            "url": {
              "raw": "{{api_url}}/ai/job-recommendations",
              "host": ["{{api_url}}"],
              "path": ["ai", "job-recommendations"]
            },
            "description": "Get personalized job recommendations based on CV analysis"
          },
          "response": []
        },
        {
          "name": "Generate Skill Roadmap",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"skillGaps\": [\n    {\n      \"skill\": \"Machine Learning\",\n      \"required\": true,\n      \"level\": \"intermediate\",\n      \"importance\": 0.9\n    },\n    {\n      \"skill\": \"Docker\",\n      \"required\": false,\n      \"level\": \"beginner\",\n      \"importance\": 0.6\n    }\n  ],\n  \"duration\": 8,\n  \"userProfile\": {\n    \"education\": {\n      \"fieldOfStudy\": \"Computer Science\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{api_url}}/ai/skill-roadmap",
              "host": ["{{api_url}}"],
              "path": ["ai", "skill-roadmap"]
            },
            "description": "Generate personalized learning roadmap for skill gaps"
          },
          "response": []
        },
        {
          "name": "Analyze Job",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{api_url}}/ai/analyze-job/{{job_id}}",
              "host": ["{{api_url}}"],
              "path": ["ai", "analyze-job", "{{job_id}}"]
            },
            "description": "Analyze job posting and generate AI insights"
          },
          "response": []
        },
        {
          "name": "Get AI Insights",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/ai/insights",
              "host": ["{{api_url}}"],
              "path": ["ai", "insights"]
            },
            "description": "Get AI-powered insights for dashboard"
          },
          "response": []
        }
      ],
      "description": "AI-powered services for CV analysis, job recommendations, and skill roadmaps"
    },
    {
      "name": "Jobs",
      "item": [
        {
          "name": "Get All Jobs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/jobs?page=1&limit=10&status=active&type=internship&location=Ho Chi Minh",
              "host": ["{{api_url}}"],
              "path": ["jobs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "type",
                  "value": "internship"
                },
                {
                  "key": "location",
                  "value": "Ho Chi Minh"
                }
              ]
            },
            "description": "Get paginated list of jobs with filters"
          },
          "response": []
        },
        {
          "name": "Get Job by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get job successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.success) {",
                  "        pm.environment.set(\"job_id\", jsonData.data._id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/jobs/{{job_id}}",
              "host": ["{{api_url}}"],
              "path": ["jobs", "{{job_id}}"]
            },
            "description": "Get detailed job information by ID"
          },
          "response": []
        },
        {
          "name": "Create Job",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Frontend Developer Intern\",\n  \"company\": \"Tech Solutions Inc.\",\n  \"description\": \"We are looking for a talented Frontend Developer Intern to join our team. You will work on modern web applications using React and JavaScript.\",\n  \"requirements\": \"- Knowledge of JavaScript, HTML, CSS\\n- Basic understanding of React\\n- Good problem-solving skills\\n- Team player\",\n  \"responsibilities\": \"- Develop user interfaces\\n- Collaborate with design team\\n- Write clean, maintainable code\\n- Participate in code reviews\",\n  \"location\": \"Ho Chi Minh City\",\n  \"type\": \"internship\",\n  \"duration\": \"3-months\",\n  \"salary\": {\n    \"min\": 5000000,\n    \"max\": 8000000,\n    \"currency\": \"VND\",\n    \"period\": \"monthly\"\n  },\n  \"benefits\": [\n    \"Flexible working hours\",\n    \"Remote work options\",\n    \"Learning opportunities\",\n    \"Certificate upon completion\"\n  ],\n  \"skills\": [\n    {\n      \"name\": \"JavaScript\",\n      \"required\": true,\n      \"level\": \"intermediate\"\n    },\n    {\n      \"name\": \"React\",\n      \"required\": true,\n      \"level\": \"beginner\"\n    },\n    {\n      \"name\": \"HTML/CSS\",\n      \"required\": true,\n      \"level\": \"intermediate\"\n    }\n  ],\n  \"categories\": [\"technology\"],\n  \"experience\": {\n    \"min\": 0,\n    \"max\": 1\n  },\n  \"education\": {\n    \"level\": \"bachelor\",\n    \"field\": [\"Computer Science\", \"Information Technology\"]\n  },\n  \"status\": \"active\",\n  \"applicationDeadline\": \"2024-12-31\",\n  \"startDate\": \"2024-01-15\",\n  \"isRemote\": true,\n  \"contactInfo\": {\n    \"email\": \"hr@techsolutions.com\",\n    \"phone\": \"0123456789\"\n  }\n}"
            },
            "url": {
              "raw": "{{api_url}}/jobs",
              "host": ["{{api_url}}"],
              "path": ["jobs"]
            },
            "description": "Create a new job posting (employer only)"
          },
          "response": []
        },
        {
          "name": "Update Job",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Frontend Developer Intern\",\n  \"description\": \"Updated job description\",\n  \"salary\": {\n    \"min\": 6000000,\n    \"max\": 9000000\n  },\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/jobs/{{job_id}}",
              "host": ["{{api_url}}"],
              "path": ["jobs", "{{job_id}}"]
            },
            "description": "Update job information (employer only)"
          },
          "response": []
        },
        {
          "name": "Delete Job",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_url}}/jobs/{{job_id}}",
              "host": ["{{api_url}}"],
              "path": ["jobs", "{{job_id}}"]
            },
            "description": "Delete job posting (employer only)"
          },
          "response": []
        }
      ],
      "description": "Job posting and management endpoints"
    },
    {
      "name": "Applications",
      "item": [
        {
          "name": "Submit Application",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Application submitted\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.success) {",
                  "        pm.environment.set(\"application_id\", jsonData.data._id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"job\": \"{{job_id}}\",\n  \"coverLetter\": \"Dear Hiring Manager,\\n\\nI am excited to apply for the Frontend Developer Intern position at Tech Solutions Inc. I am a Computer Science student with strong skills in JavaScript and React, and I believe I would be a great fit for your team.\\n\\nI have completed several projects using React and have a good understanding of modern web development practices. I am eager to learn and contribute to your company's success.\\n\\nThank you for considering my application.\\n\\nBest regards,\\nNguyen Van A\",\n  \"resume\": {\n    \"originalName\": \"resume.pdf\",\n    \"fileName\": \"resume_123.pdf\",\n    \"fileUrl\": \"https://example.com/resume.pdf\",\n    \"fileSize\": 1024000,\n    \"mimeType\": \"application/pdf\"\n  }\n}"
            },
            "url": {
              "raw": "{{api_url}}/applications",
              "host": ["{{api_url}}"],
              "path": ["applications"]
            },
            "description": "Submit job application with cover letter and resume"
          },
          "response": []
        },
        {
          "name": "Get All Applications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/applications?page=1&limit=10&status=pending",
              "host": ["{{api_url}}"],
              "path": ["applications"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "pending"
                }
              ]
            },
            "description": "Get paginated list of applications with filters"
          },
          "response": []
        },
        {
          "name": "Get Application by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/applications/{{application_id}}",
              "host": ["{{api_url}}"],
              "path": ["applications", "{{application_id}}"]
            },
            "description": "Get detailed application information"
          },
          "response": []
        },
        {
          "name": "Update Application Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"shortlisted\",\n  \"feedback\": {\n    \"employer\": {\n      \"rating\": 4,\n      \"comments\": \"Strong technical skills and good communication.\",\n      \"strengths\": [\"Technical skills\", \"Problem solving\"],\n      \"areasForImprovement\": [\"More experience needed\"]\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{api_url}}/applications/{{application_id}}",
              "host": ["{{api_url}}"],
              "path": ["applications", "{{application_id}}"]
            },
            "description": "Update application status and add feedback"
          },
          "response": []
        },
        {
          "name": "Get Application Match Analysis",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{api_url}}/ai/application-match/{{application_id}}",
              "host": ["{{api_url}}"],
              "path": ["ai", "application-match", "{{application_id}}"]
            },
            "description": "Get AI analysis of application match score and skill gaps"
          },
          "response": []
        }
      ],
      "description": "Job application management and tracking"
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Dashboard Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/analytics/dashboard",
              "host": ["{{api_url}}"],
              "path": ["analytics", "dashboard"]
            },
            "description": "Get dashboard analytics and statistics"
          },
          "response": []
        },
        {
          "name": "Application Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/analytics/applications",
              "host": ["{{api_url}}"],
              "path": ["analytics", "applications"]
            },
            "description": "Get application statistics and trends"
          },
          "response": []
        },
        {
          "name": "Job Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/analytics/jobs",
              "host": ["{{api_url}}"],
              "path": ["analytics", "jobs"]
            },
            "description": "Get job posting statistics"
          },
          "response": []
        },
        {
          "name": "User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/analytics/users",
              "host": ["{{api_url}}"],
              "path": ["analytics", "users"]
            },
            "description": "Get user statistics (admin only)"
          },
          "response": []
        }
      ],
      "description": "Analytics and reporting endpoints"
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/users?page=1&limit=10&role=student",
              "host": ["{{api_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "role",
                  "value": "student"
                }
              ]
            },
            "description": "Get paginated list of users (admin only)"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/users/{{user_id}}",
              "host": ["{{api_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Get user information by ID"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"employer@company.com\",\n  \"password\": \"123456\",\n  \"firstName\": \"Tran Thi\",\n  \"lastName\": \"B\",\n  \"role\": \"employer\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/users",
              "host": ["{{api_url}}"],
              "path": ["users"]
            },
            "description": "Create new user (admin only)"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated Name\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{api_url}}/users/{{user_id}}",
              "host": ["{{api_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Update user information (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_url}}/users/{{user_id}}",
              "host": ["{{api_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Delete user (admin only)"
          },
          "response": []
        }
      ],
      "description": "User management endpoints (admin only)"
    },
    {
      "name": "Skill Roadmaps",
      "item": [
        {
          "name": "Get All Roadmaps",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/roadmaps?page=1&limit=10",
              "host": ["{{api_url}}"],
              "path": ["roadmaps"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get user's skill roadmaps"
          },
          "response": []
        },
        {
          "name": "Get Roadmap by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/roadmaps/{{roadmap_id}}",
              "host": ["{{api_url}}"],
              "path": ["roadmaps", "{{roadmap_id}}"]
            },
            "description": "Get detailed roadmap information"
          },
          "response": []
        },
        {
          "name": "Create Roadmap",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Frontend Development Roadmap\",\n  \"description\": \"Personalized learning path for frontend development\",\n  \"skillGaps\": [\n    {\n      \"skill\": \"React\",\n      \"importance\": 0.9\n    }\n  ],\n  \"duration\": 8,\n  \"targetRole\": \"Frontend Developer\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/roadmaps",
              "host": ["{{api_url}}"],
              "path": ["roadmaps"]
            },
            "description": "Create new skill roadmap"
          },
          "response": []
        },
        {
          "name": "Update Roadmap",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Frontend Roadmap\",\n  \"progress\": 50\n}"
            },
            "url": {
              "raw": "{{api_url}}/roadmaps/{{roadmap_id}}",
              "host": ["{{api_url}}"],
              "path": ["roadmaps", "{{roadmap_id}}"]
            },
            "description": "Update roadmap progress"
          },
          "response": []
        },
        {
          "name": "Delete Roadmap",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_url}}/roadmaps/{{roadmap_id}}",
              "host": ["{{api_url}}"],
              "path": ["roadmaps", "{{roadmap_id}}"]
            },
            "description": "Delete skill roadmap"
          },
          "response": []
        }
      ],
      "description": "Skill roadmap management endpoints"
    }
  ]
}
